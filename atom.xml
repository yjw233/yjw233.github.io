<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yjw233.github.io</id>
    <title>Jev</title>
    <updated>2022-04-02T07:19:21.611Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yjw233.github.io"/>
    <link rel="self" href="https://yjw233.github.io/atom.xml"/>
    <subtitle>不积跬步，无以至千里</subtitle>
    <logo>https://yjw233.github.io/images/avatar.png</logo>
    <icon>https://yjw233.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Jev</rights>
    <entry>
        <title type="html"><![CDATA[webase启动]]></title>
        <id>https://yjw233.github.io/post/webase-qi-dong/</id>
        <link href="https://yjw233.github.io/post/webase-qi-dong/">
        </link>
        <updated>2022-04-02T07:15:30.000Z</updated>
        <content type="html"><![CDATA[<p>cd webase-deploy/<br>
python3 deploy.py startAll</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[对象成员（C++）]]></title>
        <id>https://yjw233.github.io/post/dui-xiang-cheng-yuan-c/</id>
        <link href="https://yjw233.github.io/post/dui-xiang-cheng-yuan-c/">
        </link>
        <updated>2021-05-06T12:31:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目描述">题目描述</h1>
<p>设计一个产品类 Product ，允许通过如下方式来创建产品对象： 通过指定产品名创建； 通过指定产品名和产品价格创建； 通过指定产品名、产品价格、出厂日期（对象成员）创建； Product 还应该包含如下属性：生产厂家、易碎标记、有效日期（使用对象成员）、颜色、高度。成员函数包括访问和修改这些属性的操作。 在 main( ) 中定义对象，并输出相关信息。<br>
相关类的定义提示:</p>
<pre><code class="language-c++">class Product
{
       string name;
       double price;
       Date deptime;
       string factory;
       bool easy_break;
       Date valtime; 
       string color;
       double high;
public:
       ........ 
       void output (  ); 
}; 
</code></pre>
<p>输出函数提示 :</p>
<pre><code class="language-c++">void Product::output (  )
{
       cout&lt;&lt;name&lt;&lt;&quot; &quot;&lt;&lt;price&lt;&lt;endl;
       cout&lt;&lt;deptime.Getyear()&lt;&lt;&quot;-&quot;&lt;&lt;deptime.Getmonth()&lt;&lt;&quot;-&quot;&lt;&lt;deptime.Getday()&lt;&lt;endl;
       cout&lt;&lt;factory&lt;&lt;&quot; &quot;&lt;&lt;easy_break&lt;&lt;endl;
       cout&lt;&lt;valtime.Getyear()&lt;&lt;&quot;-&quot;&lt;&lt;valtime.Getmonth()&lt;&lt;&quot;-&quot;&lt;&lt;valtime.Getday()&lt;&lt;endl;
} 
</code></pre>
<p>main（）函数如下，请复制使用</p>
<pre><code class="language-c++">int main()
{
       string  s;
       cin&gt;&gt;s;
       Product p1(&quot;car&quot;);
       Product p2(&quot;glass&quot;,3.00);
       Product p3(&quot;pen&quot;,5.00,2009,3,14);
       p1.SetProduct(&quot;car&quot;,100000.0,2009,3,14,&quot;nanjing&quot;,0,2010,10,14,&quot;red&quot;,1.5);
       p1.output();
       p2.output();
       p3.output();
       return 0;
}
</code></pre>
<p>输入描述</p>
<pre><code class="language-c++">Start
</code></pre>
<p>输出描述</p>
<pre><code class="language-c++">Constrcting One....
Constrcting Two....
Constrcting Three....
car 100000
2009-3-14
nanjing 0
2010-10-14
glass 3
2000-1-1
unnamed 0
2000-1-1
pen 5
2009-3-14
unnamed 0
2000-1-1
</code></pre>
<h1 id="解法">解法</h1>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;string&gt;
using namespace std;
class Date{
       
       int year;
       int month;
       int day;
       public:
       
       Date(int y=2000,int m=1,int d=1){year=y;month=m;day=d;}
       int Getyear(){return year;}
       int Getmonth(){return month;}
       int Getday(){return day;}
       void setDate(int y,int m,int d){year=y;month=m;day=d;}
};
class Product
{
       string name;
       double price;
       Date deptime;
       string factory;
       bool easy_break;
       Date valtime; 
       string color;
       double high;
public:
     Product(string n);
      Product(string n,double p);
       Product(string n,double p,int y,int m,int d);
       void SetProduct(string n,double p,int y,int m,int d,string f,bool e,int yy,int mm,int dd,string c,double h);
       void output (  ); 
}; 
 //Product::Product(){name=&quot;unnaned&quot;;price=0;factory=&quot;nanjing&quot;;easy_break=0;color=&quot;&quot;;high=0;}
 Product::Product(string n)
       {
              name=n;price=0;factory=&quot;unnamed&quot;;easy_break=0;color=&quot;&quot;;high=0;
              cout&lt;&lt;&quot;Constrcting One....&quot;&lt;&lt;endl;
       } 
Product::Product(string n,double p)
       {
              name=n;price=p;factory=&quot;unnamed&quot;;easy_break=0;color=&quot;&quot;;high=0;
              cout&lt;&lt;&quot;Constrcting Two....&quot;&lt;&lt;endl;
       } 
Product::Product(string n,double p,int y,int m,int d):deptime(y,m,d)
       {
              name=n;price=p;factory=&quot;unnamed&quot;;easy_break=0;color=&quot;&quot;;high=0;
              cout&lt;&lt;&quot;Constrcting Three....&quot;&lt;&lt;endl;
       } 
void Product::SetProduct(string n,double p,int y,int m,int d,string f,bool e,int yy, int mm,int dd,string c,double h)
       {      name=n;price=p;deptime.setDate(y,m,d);factory=f;easy_break=e;valtime.setDate(yy,mm,dd);color=c;high=h;
       } 
void Product::output (  )
{
       cout&lt;&lt;name&lt;&lt;&quot; &quot;&lt;&lt;price&lt;&lt;endl;
       cout&lt;&lt;deptime.Getyear()&lt;&lt;&quot;-&quot;&lt;&lt;deptime.Getmonth()&lt;&lt;&quot;-&quot;&lt;&lt;deptime.Getday()&lt;&lt;endl;
       cout&lt;&lt;factory&lt;&lt;&quot; &quot;&lt;&lt;easy_break&lt;&lt;endl;
       cout&lt;&lt;valtime.Getyear()&lt;&lt;&quot;-&quot;&lt;&lt;valtime.Getmonth()&lt;&lt;&quot;-&quot;&lt;&lt;valtime.Getday()&lt;&lt;endl;
} 

int main()
{
       string  s;
       cin&gt;&gt;s;
       Product p1(&quot;car&quot;);
       Product p2(&quot;glass&quot;,3.00);
       Product p3(&quot;pen&quot;,5.00,2009,3,14);
       p1.SetProduct(&quot;car&quot;,100000.0,2009,3,14,&quot;nanjing&quot;,0,2010,10,14,&quot;red&quot;,1.5);
       p1.output();
       p2.output();
       p3.output();
       return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[text]]></title>
        <id>https://yjw233.github.io/post/text/</id>
        <link href="https://yjw233.github.io/post/text/">
        </link>
        <updated>2021-05-03T11:15:02.000Z</updated>
        <summary type="html"><![CDATA[<p>#text#</p>
]]></summary>
        <content type="html"><![CDATA[<p>#text#</p>
<!-- more -->
<!-- more -->
]]></content>
    </entry>
</feed>